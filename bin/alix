#!/usr/bin/python

from alix import alix
import sys
import argparse

if __name__ == "__main__":
	#parser = argparse.ArgumentParser(description='Alix command line')
	#parser.add_argument('list', help='registered micro services list')
	#args = parser.parse_args()

	cmd = sys.argv[1]
	if cmd == "list":
		list = alix.list()
		print 'STATUS'.ljust(12) + '  ' + 'SERVICE NAME'.ljust(32) + '  ' + 'CHANNEL'.ljust(48) + '  ' + 'MODULE'.ljust(64)
		print '-'*12 + '  ' + '-'*32 + '  ' + '-'*48 + '  ' + '-'*64
		for item in list:
        		print alix.status(item['name']).ljust(12)[0:12] + '  ' + item['name'].ljust(32)[0:32] + '  ' + item['channel'].ljust(48)[0:48] + '  ' + item['modulePath'] + '/' + item['module'].ljust(64)[0:64]
	if cmd == 'status':
		name = sys.argv[2]
		print(alix.status(name))
	elif cmd == 'stopAll':
        	alix.stopAll()
	elif cmd == 'stop':
		name = sys.argv[2]
		alix.stop(name)
	elif cmd == 'startAll':
        	alix.startAll()
	elif cmd == 'start':
		name = sys.argv[2]
		#send the start message to alix-srv
		alix.sendMessage('alix:cmd', 'startService ' + name)
	elif cmd == 'restartAll':
		alix.sendMessage('alix:cmd', 'restartServices')
	elif cmd == 'restart':
		name = sys.argv[2]
		alix.sendMessage('alix:cmd', 'restartService ' + name)
	elif cmd == 'register':
		name = sys.argv[2]
		channel = sys.argv[3]
		module = sys.argv[4]
		modulePath = sys.argv[5]
		description = sys.argv[6]
		alix.register(name, channel, module, modulePath, description)
	elif cmd == 'unregister':
		name = sys.argv[2]
		alix.unregister(name)
	elif cmd == 'getParams':
		name = sys.argv[2]
		print alix.getParams(name)
	elif cmd == 'getParam':
		name = sys.argv[2]
		param = sys.argv[3]
		print(alix.getParam(name, param))
        elif cmd == 'setParam':
                name = sys.argv[2]
                param = sys.argv[3]
		value = sys.argv[4]
                alix.setParam(name, param, value)
        elif cmd == 'delParam':
                name = sys.argv[2]
                param = sys.argv[3]
		alix.delParam(name, param)
	elif cmd == 'sendMessage':
		channel = sys.argv[2]
		message = sys.argv[3]
		alix.sendMessage(channel, message)
	elif cmd == 'exportConfig':
		name = sys.argv[2]
		path = sys.argv[3]
		alix.exportConfig(name, path)
	elif cmd == 'importConfig':
		path = sys.argv[2]
		alix.importConfig(path)
	elif cmd == 'clone':
		sourceName = sys.argv[2]
		destName = sys.argv[3]
		alix.clone(sourceName, destName)
	elif cmd == 'rename':
		sourceName = sys.argv[2]
		destName = sys.argv[3]
		alix.rename(sourceName, destName)
	elif cmd == 'help':
		print(help(sys.modules[__name__]))
